/*! angular-lookup-directive 19-11-2015 */

!function () {
    "use strict";
    var a = ["$http", "$q"], b = function (a, b) {
        var c = '<div><input type="text" ng-model="value" class="ruaghain-lookup" ng-keyup="onKeyUp($event)" ng-keydown="onKeyDown($event)"><ul><li ng-repeat="record in foundRecords"><a href="#" ng-click="onItemSelect(record)">{{record[lookupTextField]}}</a></li></ul></div><div ng-show="addRecord"><button id="btnSave" ng-click="saveLookup()">Save</button><button id="btnCancel" ng-click="cancel()">Cancel</button></div>', d = function (c, d, e, f) {
            var g = d.find("input");
            f.$formatters.push(function (a) {
                return a ? {id: a[c.lookupValueField], value: a[c.lookupTextField]} : void 0
            }), f.$parsers.push(function (a) {
                var b = a[c.lookupValueField], d = a[c.lookupTextField];
                return {id: b, value: d}
            }), f.$render = function () {
                c.id = f.$viewValue.id, c.value = f.$viewValue.value
            }, c.onItemSelect = function (a) {
                g.val(a[c.lookupTextField]), f.$setViewValue(a), c.searching = !1, c.clearResults()
            }, c.onKeyUp = function (a) {
                var b = a.which;
                27 === b ? c.clearResults() : (b > 64 && 91 > b || b > 96 && 123 > b || 40 === b) && c.search()
            }, c.onBlur = function () {
            }, c.onKeyDown = function (a) {
            }, c.clearResults = function () {
                c.foundRecords = [], c.addRecord = !1, c.searching = !1
            }, c.search = function () {
                c.searching = !0, c.findRestData(g).then(function (a) {
                    c.addRecord = c.lookupDatasource().allowInsert && ("undefined" == typeof a || 0 === a.length), c.foundRecords = a
                })
            }, c.saveLookup = function () {
                var d = g.val(), e = c.lookupDatasource().baseUrl, h = '{"' + c.lookupTextField + '":"' + d + '"}', i = b.defer();
                a.post(e, h).then(function (a) {
                    c.getResource(a.headers("location")).then(function (a) {
                        f.$setViewValue(a), c.clearResults()
                    })
                }, function (a) {
                    throw i.reject(a), new Error("There was an error saving the record: " + a.data.message)
                })
            }, c.cancel = function () {
                c.clearResults(), c.value = ""
            }, c.getResource = function (c) {
                var d = b.defer();
                return a.get(c).then(function (a) {
                    d.resolve(a.data)
                }, function (a) {
                    throw d.reject(a), new Error("There was an error looking up information")
                }), d.promise
            }
        }, e = ["$scope", function (c) {
            c.searching = !1, c.findRestData = function (c) {
                var d = b.defer(), e = this.lookupDatasource(), f = c.val(), g = encodeURIComponent("%" + f + "%");
                return a.get(e.baseUrl + e.searchUrl + g).then(function (a) {
                    e.payload(a.data) ? d.resolve(e.payload(a.data)) : d.resolve()
                }, function (a) {
                    throw d.reject(a), new Error("There was an error looking up information")
                }), d.promise
            }
        }];
        return {
            restrict: "E",
            scope: {lookupDatasource: "&", lookupTextField: "@", lookupValueField: "@"},
            require: "ngModel",
            template: c,
            link: d,
            controller: e
        }
    };
    b.$inject = a, angular.module("ruaghain.lookup-directive", []).directive("customLookup", b)
}();
//# sourceMappingURL=angular-lookup-directive.min.js.map