/*! angular-lookup-directive 05-12-2015 */

!function () {
    "use strict";
    var a = ["$http", "$q", "$compile"], b = function (a, b, c) {
        var d = '<div class="lookup-results"><ul ng-keydown="onListKeyDown($event)"><li ng-repeat="record in foundRecords"><a href="" ng-click="onItemSelect(record)" ng-keyup="onItemKeyUp($event, record)">{{record[lookupTextField]}}</a></li></ul><div ng-show="addRecord"><button id="btnSave" ng-click="saveLookup()">Save</button><button id="btnCancel" ng-click="cancel()">Cancel</button></div></div>', e = function (e, f, g, h) {
            if (h) {
                var i = c(d)(e);
                f.after(i);
                var j = function (a) {
                    var b = a.which;
                    if (27 === b || 40 != b && h.$isEmpty(f.val()))e.clearResults(), e.itemSelected = !1, h.$setViewValue(null); else if (b > 64 && 91 > b || b > 96 && 123 > b || 40 === b) {
                        if (e.searching && 40 === b)return;
                        e.search()
                    }
                };
                f.on("keyup", j);
                var k = void 0 !== g.$attr.required;
                h.$formatters.push(function (a) {
                    return a ? {id: a[e.lookupValueField], value: a[e.lookupTextField]} : void 0
                }), h.$parsers.push(function (a) {
                    if (a) {
                        var b = a[e.lookupValueField], c = a[e.lookupTextField];
                        return {id: b, value: c}
                    }
                    return {id: "", value: ""}
                }), h.$validators.requiredItemSelected = function (a, b) {
                    var c = a || b;
                    return k ? !h.$isEmpty(c[e.lookupValueField]) : !0
                }, h.$render = function () {
                    e.id = h.$viewValue.id, e.value = h.$viewValue.value
                }, e.onItemSelect = function (a) {
                    f.val(a[e.lookupTextField]), h.$setViewValue(a), e.itemSelected = !0, e.clearResults()
                }, e.onItemKeyUp = function (a, b) {
                    var c = a.which;
                    13 === c && e.onItemSelect(b)
                }, e.onListKeyDown = function (a) {
                    if (a.preventDefault(), 27 === a.which && e.clearResults(), 40 == a.which) {
                        var b = a.target.parentElement.nextElementSibling;
                        b ? b.firstChild.focus() : a.target.parentElement.parentElement.firstElementChild.focus()
                    } else if (38 == a.which) {
                        var c = a.target.parentElement.previousElementSibling;
                        c ? c.firstChild.focus() : a.target.parentElement.parentElement.lastElementChild.focus()
                    }
                }, e.clearResults = function () {
                    e.foundRecords = [], e.addRecord = !1, e.searching = !1
                }, e.search = function () {
                    e.searching = !0, e.findRestData(f).then(function (a) {
                        e.addRecord = e.lookupAllowInsert && ("undefined" == typeof a || 0 === a.length), a && 1 == a.length ? e.onItemSelect(a[0]) : e.foundRecords = a
                    })
                }, e.saveLookup = function () {
                    var c = f.val(), d = e.lookupDatasource().baseUrl, g = '{"' + e.lookupTextField + '":"' + c + '"}', i = b.defer();
                    a.post(d, g).then(function (a) {
                        e.getResource(a.headers("location")).then(function (a) {
                            h.$setViewValue(a), e.clearResults()
                        })
                    }, function (a) {
                        throw i.reject(a), new Error("There was an error saving the record: " + a.data.message)
                    })
                }, e.cancel = function () {
                    e.clearResults()
                }, e.getResource = function (c) {
                    var d = b.defer();
                    return a.get(c).then(function (a) {
                        d.resolve(a.data)
                    }, function (a) {
                        throw d.reject(a), new Error("There was an error looking up information")
                    }), d.promise
                }
            }
        }, f = ["$scope", function (c) {
            c.searching = !1, c.itemSelected = !1, c.lookupAllowInsert = angular.isDefined(c.lookupAllowInsert) ? c.lookupAllowInsert : !1, c.findRestData = function (c) {
                var d = b.defer(), e = this.lookupDatasource(), f = c.val(), g = encodeURIComponent("%" + f + "%");
                return a.get(e.baseUrl + e.searchUrl + g).then(function (a) {
                    e.payload(a.data) ? d.resolve(e.payload(a.data)) : d.resolve()
                }, function (a) {
                    throw d.reject(a), new Error("There was an error looking up information")
                }), d.promise
            }
        }];
        return {
            restrict: "A",
            scope: {lookupDatasource: "&", lookupTextField: "@", lookupValueField: "@", lookupAllowInsert: "=?"},
            require: "ngModel",
            link: e,
            controller: f
        }
    };
    b.$inject = a, angular.module("ruaghain.lookup-directive", []).directive("customLookup", b)
}();
//# sourceMappingURL=angular-lookup-directive.min.js.map